{
 "pageProps": {
  "note": {
   "id": "ek0wyOwdKnZslLXN92M1L",
   "title": "Vault",
   "vault": {
    "fsPath": "infrastructure",
    "name": "infrastructure"
   },
   "type": "note",
   "desc": "",
   "links": [],
   "anchors": {
    "vault-hashicorp": {
     "type": "header",
     "text": "Vault Hashicorp",
     "value": "vault-hashicorp",
     "line": 8,
     "column": 0
    },
    "using-vault-for-secrets-with-kubernetes-terraform": {
     "type": "header",
     "text": "Using Vault for secrets with kubernetes, terraform",
     "value": "using-vault-for-secrets-with-kubernetes-terraform",
     "line": 10,
     "column": 0
    },
    "injecting-secrets-into-kubernetes-pods-via-vault-agent-containers": {
     "type": "header",
     "text": "Injecting Secrets into Kubernetes Pods via Vault Agent Containers",
     "value": "injecting-secrets-into-kubernetes-pods-via-vault-agent-containers",
     "line": 28,
     "column": 0
    },
    "questions": {
     "type": "header",
     "text": "Questions",
     "value": "questions",
     "line": 30,
     "column": 0
    },
    "articles-notes": {
     "type": "header",
     "text": "Articles Notes",
     "value": "articles-notes",
     "line": 45,
     "column": 0
    },
    "vault-agent-kubernetes": {
     "type": "header",
     "text": "Vault Agent Kubernetes",
     "value": "vault-agent-kubernetes",
     "line": 47,
     "column": 0
    }
   },
   "fname": "infrastructure.secret-manager.vault",
   "updated": 1626405550937,
   "created": 1625883934363,
   "parent": "elTjXzqYB94zPLOldED4o",
   "children": [],
   "data": {},
   "contentHash": "24d77e59ea3f62d69abb631ab9ebbaf9",
   "custom": {}
  },
  "body": "<h1 id=\"vault\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vault\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vault</h1>\n<h1 id=\"vault-hashicorp\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vault-hashicorp\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vault Hashicorp</h1>\n<h2 id=\"using-vault-for-secrets-with-kubernetes-terraform\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#using-vault-for-secrets-with-kubernetes-terraform\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Using Vault for secrets with kubernetes, terraform</h2>\n<p>more information about the chart: <a href=\"https://artifacthub.io/packages/helm/hashicorp/vault/0.13.0\">https://artifacthub.io/packages/helm/hashicorp/vault/0.13.0</a>\nofficial : <a href=\"https://www.vaultproject.io/docs/platform/k8s/helm\">https://www.vaultproject.io/docs/platform/k8s/helm</a></p>\n<pre><code>  # HA mode\n  --set \"server.ha.enabled=true\"\n  # UI\n  kubectl port-forward vault-0 8200:8200\n  http://localhost:8200/ui/\n  # initialize and unseal vualt\n  kubectl get pods -l app.kubernetes.io/name=vault\n  kubectl exec -ti vault-0 -- vault operator init\n  ## return hey\n  # Unseal Key 1: MBFSDepD9E6whREc6Dj+k3pMaKJ6cCnCUWcySJQymObb\n</code></pre>\n<h3 id=\"injecting-secrets-into-kubernetes-pods-via-vault-agent-containers\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#injecting-secrets-into-kubernetes-pods-via-vault-agent-containers\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Injecting Secrets into Kubernetes Pods via Vault Agent Containers</h3>\n<h2 id=\"questions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#questions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Questions</h2>\n<p><img src=\"assets/images/2021-07-09-23-03-59.png\"></p>\n<ol>\n<li><a href=\"https://www.youtube.com/watch?v=riI0B5bDkPs&#x26;t=215s\">https://www.youtube.com/watch?v=riI0B5bDkPs&#x26;t=215s</a></li>\n</ol>\n<ul>\n<li>\n<p>How can I include to kubernettes Cluster?</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=xUuJhgDbUJQ\">Demo: Vault + Kubernetes Sidecar Injection</a></li>\n<li><a href=\"#vault-agent-kubernetes\">Injecting Vault Secrets Into Kubernetes Pods via a Sidecar</a></li>\n</ul>\n</li>\n<li>\n<p>Do we need replicas?</p>\n</li>\n<li>\n<p>Which kind of authentication do we need?</p>\n</li>\n<li>\n<p>Can we used for current dev namespaces?</p>\n</li>\n</ul>\n<h2 id=\"articles-notes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#articles-notes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Articles Notes</h2>\n<h4 id=\"vault-agent-kubernetes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#vault-agent-kubernetes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Vault Agent Kubernetes</h4>\n<p>Injecting Secrets into Kubernetes Pods via Vault Agent Containers</p>\n<p>Author: backoff 1.562132589\nURL: <a href=\"https://learn.hashicorp.com/tutorials/vault/kubernetes-sidecar\">https://learn.hashicorp.com/tutorials/vault/kubernetes-sidecar</a></p>\n<hr>\n<p>Authenticate and acquire a client token. <em> Manage the lifecycle of the token. </em> Retrieve secrets from Vault. * Manage the leases of any dynamic secrets. Vault Agent takes responsibility for these tasks</p>\n<pre><code>NOTE: The only consideration is to include annotations into the service but it can be patched without a problem.\n</code></pre>\n<hr>",
  "noteIndex": {
   "id": "23f9dc67-8303-4034-90d3-7371e6cc8996",
   "title": "Welcome",
   "vault": {
    "fsPath": "vault",
    "name": "vault"
   },
   "type": "note",
   "desc": "",
   "links": [
    {
     "type": "ref",
     "from": {
      "fname": "root",
      "id": "23f9dc67-8303-4034-90d3-7371e6cc8996",
      "vaultName": "vault"
     },
     "value": "architecture.microservices",
     "position": {
      "start": {
       "line": 14,
       "column": 1,
       "offset": 460
      },
      "end": {
       "line": 14,
       "column": 55,
       "offset": 514
      },
      "indent": []
     },
     "xvault": true,
     "to": {
      "fname": "architecture.microservices",
      "vaultName": "architecture"
     }
    }
   ],
   "anchors": {
    "personal-wiki": {
     "type": "header",
     "text": "Personal wiki",
     "value": "personal-wiki",
     "line": 8,
     "column": 0
    },
    "content-example": {
     "type": "header",
     "text": "Content Example",
     "value": "content-example",
     "line": 18,
     "column": 0
    }
   },
   "fname": "root",
   "updated": 1626063584796,
   "created": 1621701645107,
   "parent": null,
   "children": [
    "QYW64J8o1q-RZUAWNuBVz",
    "yWa7opDl6kwVzYa8jBw6Y",
    "9bb7282d-4ab7-4792-b0c5-43f293c296e1",
    "47e06771-c344-4012-8428-07fea574a55e",
    "dc9ce0b8-8551-4aaf-bcc8-309ad1c58b36",
    "4ad54c56-c118-4c77-b7a7-704b6e57579c",
    "8a285efb-1044-43b2-b86f-904ad3bf48fc",
    "3e958243-cf77-44a4-8a90-fef2ec98ad43",
    "28e19609-7af9-4cfe-8ea3-a7341e6709e8",
    "d824c890-9817-49b3-ba11-36bc6c166015",
    "9729bb5d-6c46-4422-bc01-0d4f1a9b3ef8"
   ],
   "data": {},
   "contentHash": "e01bd36ad387507acb1823b37e43ca12",
   "custom": {
    "nav_order": 0,
    "permalink": "/"
   },
   "body": "\n## Personal wiki\n\n> This is my personal wiki page, where I put ideas diagrams, where I'm researching a topic, you may not found elaborated articles, just notes that I took at some point when studying. Some notes may be outdated, not following best practices, wrong information or you would like to contribute, email me! I'll appreciate it!\n\nMy e-mail: mzavaletavargas@gmail.com\n\nThanks!\n\n[Back to mi website](http://gustavozavaleta.com)\n\n### Content Example\n\n![[dendron://architecture/architecture.microservices]]\n"
  },
  "collectionChildren": null,
  "customHeadContent": null,
  "config": {
   "version": 4,
   "useFMTitle": true,
   "useNoteTitleForLink": true,
   "site": {
    "copyAssets": true,
    "siteHierarchies": [
     "root"
    ],
    "siteRootDir": "docs",
    "usePrettyRefs": true,
    "title": "Gustavo's Wiki",
    "description": "Personal knowledge space",
    "duplicateNoteBehavior": {
     "action": "useVault",
     "payload": [
      "vault",
      "programming",
      "dev-ops",
      "operating-systems",
      "personal-growth",
      "databases",
      "networking",
      "computer-science",
      "books",
      "infrastructure",
      "health",
      "architecture"
     ]
    },
    "siteUrl": "https://wiki.gustavozavaleta.com",
    "siteLastModified": true,
    "gh_edit_branch": "main",
    "usePrettyLinks": true,
    "siteNotesDir": "notes",
    "siteFaviconPath": "favicon.ico",
    "gh_edit_link": true,
    "gh_edit_link_text": "Edit this page on GitHub",
    "gh_root": "docs/",
    "gh_edit_view_mode": "edit",
    "writeStubs": true,
    "siteIndex": "root"
   },
   "dev": {
    "previewV2Enabled": false,
    "enablePreviewV2": true
   },
   "commands": {
    "lookup": {
     "note": {
      "selectionMode": "extract",
      "confirmVaultOnCreate": false,
      "leaveTrace": false,
      "bubbleUpCreateNew": true,
      "fuzzThreshold": 0.2
     }
    },
    "insertNote": {
     "initialValue": "templates"
    },
    "insertNoteLink": {
     "aliasMode": "none",
     "enableMultiSelect": false
    },
    "insertNoteIndex": {
     "enableMarker": false
    },
    "randomNote": {}
   },
   "workspace": {
    "dendronVersion": "0.72.0",
    "vaults": [
     {
      "fsPath": "architecture",
      "name": "architecture"
     },
     {
      "fsPath": "health",
      "name": "health"
     },
     {
      "fsPath": "infrastructure",
      "name": "infrastructure"
     },
     {
      "fsPath": "books",
      "name": "books"
     },
     {
      "fsPath": "computer-science",
      "name": "computer-science"
     },
     {
      "fsPath": "networking",
      "name": "networking"
     },
     {
      "fsPath": "databases",
      "name": "databases"
     },
     {
      "fsPath": "personal-growth",
      "name": "personal-growth"
     },
     {
      "fsPath": "operating-systems",
      "name": "operating-systems"
     },
     {
      "fsPath": "dev-ops",
      "name": "dev-ops"
     },
     {
      "fsPath": "programming",
      "name": "programming"
     },
     {
      "fsPath": "vault",
      "name": "vault"
     }
    ],
    "journal": {
     "dailyDomain": "daily",
     "name": "journal",
     "dateFormat": "y.MM.dd",
     "addBehavior": "childOfDomain"
    },
    "scratch": {
     "name": "scratch",
     "dateFormat": "y.MM.dd.HHmmss",
     "addBehavior": "asOwnDomain"
    },
    "graph": {
     "zoomSpeed": 1
    },
    "enableAutoCreateOnDefinition": false,
    "enableXVaultWikiLink": false,
    "enableRemoteVaultInit": true,
    "workspaceVaultSyncMode": "noCommit",
    "enableAutoFoldFrontmatter": false,
    "maxPreviewsCached": 10,
    "maxNoteLength": 204800,
    "task": {
     "name": "",
     "dateFormat": "",
     "addBehavior": "childOfCurrent",
     "statusSymbols": {
      "": " ",
      "wip": "w",
      "done": "x",
      "assigned": "a",
      "moved": "m",
      "blocked": "b",
      "delegated": "l",
      "dropped": "d",
      "pending": "y"
     },
     "prioritySymbols": {
      "H": "high",
      "M": "medium",
      "L": "low"
     },
     "todoIntegration": false,
     "createTaskSelectionType": "selection2link"
    },
    "enableUserTags": true,
    "enableHashTags": true,
    "enableEditorDecorations": true
   },
   "preview": {
    "enableFMTitle": true,
    "enableNoteTitleForLink": true,
    "enableMermaid": true,
    "enablePrettyRefs": true,
    "enableKatex": true
   },
   "mermaid": true,
   "useKatex": true
  }
 },
 "__N_SSG": true
}