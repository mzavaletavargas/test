{"pageProps":{"note":{"id":"78e1ced2-067d-4250-baba-4c35e5ae0d50","title":"Worker Threads","vault":{"fsPath":"programming","name":"programming"},"type":"note","desc":"","links":[],"anchors":{"why":{"type":"header","text":"Why?","value":"why","line":8,"column":0},"what-should-i-use-child_process-worker-threads":{"type":"header","text":"What should I use: Child_process, worker Threads","value":"what-should-i-use-child_process-worker-threads","line":12,"column":0},"code":{"type":"header","text":"Code","value":"code","line":19,"column":0},"thread-pool":{"type":"header","text":"Thread pool","value":"thread-pool","line":45,"column":0},"concurrent-work":{"type":"header","text":"Concurrent work","value":"concurrent-work","line":53,"column":0},"child-process":{"type":"header","text":"child Process","value":"child-process","line":58,"column":0},"aditional-information":{"type":"header","text":"Aditional Information","value":"aditional-information","line":64,"column":0}},"fname":"programming.javascript.node-js.worker-threads","updated":1621708807912,"created":1621708792442,"parent":"dec2b4d3-ff94-4735-8797-0a65986de197","children":[],"data":{},"contentHash":"86e203417be8d4cd9a88812d41d256df","custom":{}},"body":"<h1 id=\"worker-threads\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#worker-threads\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Worker Threads</h1>\n<h2 id=\"why\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#why\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Why?</h2>\n<p>Intesive cpu work, like compression.</p>\n<h2 id=\"what-should-i-use-child_process-worker-threads\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#what-should-i-use-child_process-worker-threads\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>What should I use: Child_process, worker Threads</h2>\n<p>Explained : <a href=\"https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10\">https://blog.logrocket.com/node-js-multithreading-what-are-worker-threads-and-why-do-they-matter-48ab102f8b10</a></p>\n<p>Worker threads: <a href=\"https://nodejs.org/api/worker_threads.html\">https://nodejs.org/api/worker_threads.html</a>\nChild Process: <a href=\"https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options\">https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options</a></p>\n<h2 id=\"code\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#code\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Code</h2>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token maybe-class-name\">Worker</span><span class=\"token punctuation\">,</span>\n  isMainThread<span class=\"token punctuation\">,</span>\n  parentPort<span class=\"token punctuation\">,</span>\n  workerData<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker_threads\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> w <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> workerData<span class=\"token operator\">:</span> <span class=\"token keyword null nil\">null</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nw<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nw<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nw<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Child on <code>path</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> parentPort <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"worker_threads\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// do something</span>\n\nparentPort<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"notify parent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"thread-pool\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#thread-pool\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Thread pool</h2>\n<p>Is nice to have a thread poll, this library manage it for you\n<a href=\"https://github.com/watson/worker-threads-pool\">https://github.com/watson/worker-threads-pool</a></p>\n<p>General\n<a href=\"https://gobyexample.com/worker-pools\">https://gobyexample.com/worker-pools</a></p>\n<h2 id=\"concurrent-work\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concurrent-work\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concurrent work</h2>\n<p><a href=\"https://medium.com/@piotrkarpaa/async-await-and-parallel-code-in-node-js-6de6501eea48%5C\">https://medium.com/@piotrkarpaa/async-await-and-parallel-code-in-node-js-6de6501eea48\\</a>\n<a href=\"https://medium.com/platformer-blog/node-js-concurrency-with-async-await-and-promises-b4c4ae8f4510\">https://medium.com/platformer-blog/node-js-concurrency-with-async-await-and-promises-b4c4ae8f4510</a></p>\n<h2 id=\"child-process\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#child-process\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>child Process</h2>\n<p><a href=\"https://medium.com/the-guild/getting-to-know-nodes-child-process-module-8ed63038f3fa\">https://medium.com/the-guild/getting-to-know-nodes-child-process-module-8ed63038f3fa</a></p>\n<p><a href=\"https://medium.freecodecamp.org/node-js-child-processes-everything-you-need-to-know-e69498fe970a\">https://medium.freecodecamp.org/node-js-child-processes-everything-you-need-to-know-e69498fe970a</a></p>\n<h2 id=\"aditional-information\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#aditional-information\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Aditional Information</h2>\n<p><a href=\"https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\">https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953</a>\n<a href=\"https://medium.com/lazy-engineering/node-worker-threads-b57a32d84845\">https://medium.com/lazy-engineering/node-worker-threads-b57a32d84845</a>\n<a href=\"https://nodejs.org/en/docs/guides/dont-block-the-event-loop/\">https://nodejs.org/en/docs/guides/dont-block-the-event-loop/</a></p>","noteIndex":{"id":"23f9dc67-8303-4034-90d3-7371e6cc8996","title":"Welcome","vault":{"fsPath":"vault","name":"vault"},"type":"note","desc":"","links":[{"type":"ref","from":{"fname":"root","id":"23f9dc67-8303-4034-90d3-7371e6cc8996","vaultName":"vault"},"value":"architecture.microservices","position":{"start":{"line":14,"column":1,"offset":460},"end":{"line":14,"column":55,"offset":514},"indent":[]},"xvault":true,"to":{"fname":"architecture.microservices","vaultName":"architecture"}}],"anchors":{"personal-wiki":{"type":"header","text":"Personal wiki","value":"personal-wiki","line":8,"column":0},"content-example":{"type":"header","text":"Content Example","value":"content-example","line":18,"column":0}},"fname":"root","updated":1626063584796,"created":1621701645107,"parent":null,"children":["QYW64J8o1q-RZUAWNuBVz","yWa7opDl6kwVzYa8jBw6Y","9bb7282d-4ab7-4792-b0c5-43f293c296e1","47e06771-c344-4012-8428-07fea574a55e","dc9ce0b8-8551-4aaf-bcc8-309ad1c58b36","4ad54c56-c118-4c77-b7a7-704b6e57579c","8a285efb-1044-43b2-b86f-904ad3bf48fc","3e958243-cf77-44a4-8a90-fef2ec98ad43","28e19609-7af9-4cfe-8ea3-a7341e6709e8","d824c890-9817-49b3-ba11-36bc6c166015","9729bb5d-6c46-4422-bc01-0d4f1a9b3ef8"],"data":{},"contentHash":"e01bd36ad387507acb1823b37e43ca12","custom":{"nav_order":0,"permalink":"/"},"body":"\n## Personal wiki\n\n> This is my personal wiki page, where I put ideas diagrams, where I'm researching a topic, you may not found elaborated articles, just notes that I took at some point when studying. Some notes may be outdated, not following best practices, wrong information or you would like to contribute, email me! I'll appreciate it!\n\nMy e-mail: mzavaletavargas@gmail.com\n\nThanks!\n\n[Back to mi website](http://gustavozavaleta.com)\n\n### Content Example\n\n![[dendron://architecture/architecture.microservices]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Gustavo's Wiki","description":"Personal knowledge space","duplicateNoteBehavior":{"action":"useVault","payload":["vault","programming","dev-ops","operating-systems","personal-growth","databases","networking","computer-science","books","infrastructure","health","architecture"]},"siteUrl":"https://wiki.gustavozavaleta.com","siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.72.0","vaults":[{"fsPath":"architecture","name":"architecture"},{"fsPath":"health","name":"health"},{"fsPath":"infrastructure","name":"infrastructure"},{"fsPath":"books","name":"books"},{"fsPath":"computer-science","name":"computer-science"},{"fsPath":"networking","name":"networking"},{"fsPath":"databases","name":"databases"},{"fsPath":"personal-growth","name":"personal-growth"},{"fsPath":"operating-systems","name":"operating-systems"},{"fsPath":"dev-ops","name":"dev-ops"},{"fsPath":"programming","name":"programming"},{"fsPath":"vault","name":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true},"mermaid":true,"useKatex":true}},"__N_SSG":true}