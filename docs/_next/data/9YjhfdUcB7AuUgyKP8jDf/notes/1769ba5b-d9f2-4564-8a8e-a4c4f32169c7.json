{"pageProps":{"note":{"id":"1769ba5b-d9f2-4564-8a8e-a4c4f32169c7","title":"Devspace","vault":{"fsPath":"operating-systems","name":"operating-systems"},"type":"note","desc":"","links":[],"anchors":{"development":{"type":"header","text":"Development","value":"development","line":14,"column":0},"1-time-steps":{"type":"header","text":"1-Time steps","value":"1-time-steps","line":33,"column":0},"database":{"type":"header","text":"Database","value":"database","line":69,"column":0},"logging":{"type":"header","text":"Logging","value":"logging","line":75,"column":0},"environment-variables":{"type":"header","text":"Environment variables","value":"environment-variables","line":81,"column":0},"debugging-with-vs-code":{"type":"header","text":"Debugging with VS Code","value":"debugging-with-vs-code","line":85,"column":0},"config-file-sample":{"type":"header","text":"Config file sample","value":"config-file-sample","line":112,"column":0},"faqs":{"type":"header","text":"FAQs","value":"faqs","line":173,"column":0}},"fname":"operating-systems.kubernetes.team-collaboration.devspace","updated":1625873307295,"created":1622780489289,"parent":"c747004d-6ec4-4475-a696-fac341c1a707","children":[],"data":{},"contentHash":"a4da1f0834c2a38d412fb12b54da2f84","custom":{}},"body":"<h1 id=\"devspace\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#devspace\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Devspace</h1>\n<p>After installing teleprescense, dealing with imcoptibilities, old documentation, they are passing to a new version and old files and docs are outdated, I decided to give up and use devspace.</p>\n<p>Documentation is fine, even if you end up finding some info for version 1 is almost the same for version 2.</p>\n<p>There some issues with the documentation but after setting up everything for my team it was great!, we were able to solve the issue to learn a lot of things related to kubernetes and focus on developing our stuff.</p>\n<h2 id=\"development\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#development\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Development</h2>\n<p>Hands on! Just Run, is it the first time setting your environment? Go here for <a href=\"#1-time-steps\">1-time steps</a></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># located in this directory</span>\ndevspace dev\n\n</code></pre>\n<blockquote>\n<p>You may need to use <code>npm run migrate</code> for the first time or if you would like to apply migration files using prisma.</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># In a new visual studio terminal to sync files between local and remote pod.</span>\ndevspace <span class=\"token function\">sync</span>\n<span class=\"token comment\"># select `backend-legacy...`</span>\n\n</code></pre>\n<h2 id=\"1-time-steps\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#1-time-steps\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>1-Time steps</h2>\n<p>Get your environment variables from <a href=\"https://start.1password.com/open/i?a=GNL6QEUMMNGZ7GOKC3TMMZQ6FM&#x26;h=team-hapi.1password.com&#x26;i=5iu3bv2gd2ng2kzlxipz2y2nvm&#x26;v=ilpavzwvfrqcgrfafogq65nuee\">1Password</a> and save it as <code>hapi.properties</code></p>\n<blockquote>\n<p>Use your AWS username (RBAC_USERNAME) e.g: <code>gustavo</code></p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\">\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g devspace\n\nkubectl create namespace RBAC_USERNAME\n\ndevspace use namespace RBAC_USERNAME\n\n<span class=\"token comment\"># with your hapi.properties file in the base path, set config map values, this is a command defined on devspace.yml that allows you to store some commands</span>\ndevspace run create-configmap\n\n</code></pre>\n<blockquote>\n<p><code>devspace run delete-configmap</code> is available to be used.</p>\n</blockquote>\n<p>Change placeholder RBAC_USERNAME by your ingress configuration <code>./manifest/ingress.yml</code></p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> RBAC_USERNAME.hapi.trade\n</code></pre>\n<p>Run this command to apply these changes, that way will be exposed and will be shareable.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">devspace run ingress\n</code></pre>\n<h2 id=\"database\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#database\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Database</h2>\n<p>Conenct to your database using your favorite client and pointing to localhost, username, password and database can be found on <code>hapi.properties</code>.</p>\n<p>Port <code>5432</code> is already exposed and you'll be able to use it.</p>\n<h2 id=\"logging\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#logging\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Logging</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">devspace logs -f\n</code></pre>\n<h2 id=\"environment-variables\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#environment-variables\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Environment variables</h2>\n<p>All environment variables had been update when creating configmap on k8s, you can include your own on a <code>.env</code> file.</p>\n<h2 id=\"debugging-with-vs-code\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#debugging-with-vs-code\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Debugging with VS Code</h2>\n<p>Port <code>9229</code> is exposed and you will be able to debug your remote pod.\nFor debugging with docker we have to setup the following configuration on 'launch.json'</p>\n<pre class=\"language-sh\"><code class=\"language-sh\">{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"HAPI Docker: Attach to node\",\n            \"type\": \"node\",\n            \"request\": \"attach\",\n            \"port\": 9229,\n            \"address\": \"localhost\",\n            \"localRoot\": \"${workspaceFolder}\",\n            \"remoteRoot\": \"/usr/src/app\",\n            \"protocol\": \"inspector\",\n            \"sourceMapPathOverrides\": {\n                \"/usr/src/app/*\": \"${workspaceRoot}/*\",\n            },\n            \"restart\": true,\n        },\n    ]\n}\n</code></pre>\n<h2 id=\"config-file-sample\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#config-file-sample\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Config file sample</h2>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> v1beta10\n<span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> image<span class=\"token punctuation\">:</span>debug<span class=\"token punctuation\">-</span>tag\n    <span class=\"token key atrule\">dockerfile</span><span class=\"token punctuation\">:</span> ./Dockerfile\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">disabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token comment\"># cmd: ['npm', 'run', 'start:debug']</span>\n\n<span class=\"token key atrule\">deployments</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> app\n    <span class=\"token key atrule\">kubectl</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">manifests</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> ./manifests/microservice<span class=\"token punctuation\">-</span>template.yml\n\n<span class=\"token comment\"># `dev` only applies when you run `devspace dev`</span>\n<span class=\"token key atrule\">dev</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">logs</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">showLast</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>\n    <span class=\"token key atrule\">sync</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">imageName</span><span class=\"token punctuation\">:</span> app <span class=\"token comment\"># Select the Pod that runs our `app` image</span>\n      <span class=\"token key atrule\">forward</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9229</span>\n\n\n  <span class=\"token key atrule\">open</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">3000</span>\n\n  <span class=\"token comment\"># `dev.sync` configures a file sync between our Pods in k8s and your local project files</span>\n  <span class=\"token key atrule\">sync</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">imageName</span><span class=\"token punctuation\">:</span> app <span class=\"token comment\"># Select the Pod that runs our `app` image</span>\n      <span class=\"token key atrule\">initialSync</span><span class=\"token punctuation\">:</span> preferRemote\n      <span class=\"token key atrule\">disableDownload</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token key atrule\">excludePaths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> .git/\n      <span class=\"token key atrule\">uploadExcludePaths</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> Dockerfile\n        <span class=\"token punctuation\">-</span> Dockerfile.dev\n        <span class=\"token punctuation\">-</span> node_modules/\n<span class=\"token key atrule\">commands</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kubectl apply -f manifests/ingress.yml'</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> create<span class=\"token punctuation\">-</span>configmap\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kubectl create configmap backend-config --from-env-file=hapi.properties'</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> delete<span class=\"token punctuation\">-</span>configmap\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kubectl delete configmap backend-config'</span>\n\n<span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production\n      <span class=\"token key atrule\">patches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">op</span><span class=\"token punctuation\">:</span> remove\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> images.app.build.disabled\n\n</code></pre>\n<h2 id=\"faqs\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#faqs\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>FAQs</h2>\n<ul>\n<li>Issue authenticating to download images from EKS</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">aws ecr get-login-password --region us-east-1 <span class=\"token operator\">|</span> docker login --username AWS --password-stdin <span class=\"token number\">567599088800</span>.dkr.ecr.us-east-1.amazonaws.com\n</code></pre>","noteIndex":{"id":"23f9dc67-8303-4034-90d3-7371e6cc8996","title":"Welcome","vault":{"fsPath":"vault","name":"vault"},"type":"note","desc":"","links":[{"type":"ref","from":{"fname":"root","id":"23f9dc67-8303-4034-90d3-7371e6cc8996","vaultName":"vault"},"value":"architecture.microservices","position":{"start":{"line":14,"column":1,"offset":460},"end":{"line":14,"column":55,"offset":514},"indent":[]},"xvault":true,"to":{"fname":"architecture.microservices","vaultName":"architecture"}}],"anchors":{"personal-wiki":{"type":"header","text":"Personal wiki","value":"personal-wiki","line":8,"column":0},"content-example":{"type":"header","text":"Content Example","value":"content-example","line":18,"column":0}},"fname":"root","updated":1626063584796,"created":1621701645107,"parent":null,"children":["QYW64J8o1q-RZUAWNuBVz","yWa7opDl6kwVzYa8jBw6Y","9bb7282d-4ab7-4792-b0c5-43f293c296e1","47e06771-c344-4012-8428-07fea574a55e","dc9ce0b8-8551-4aaf-bcc8-309ad1c58b36","4ad54c56-c118-4c77-b7a7-704b6e57579c","8a285efb-1044-43b2-b86f-904ad3bf48fc","3e958243-cf77-44a4-8a90-fef2ec98ad43","28e19609-7af9-4cfe-8ea3-a7341e6709e8","d824c890-9817-49b3-ba11-36bc6c166015","9729bb5d-6c46-4422-bc01-0d4f1a9b3ef8"],"data":{},"contentHash":"e01bd36ad387507acb1823b37e43ca12","custom":{"nav_order":0,"permalink":"/"},"body":"\n## Personal wiki\n\n> This is my personal wiki page, where I put ideas diagrams, where I'm researching a topic, you may not found elaborated articles, just notes that I took at some point when studying. Some notes may be outdated, not following best practices, wrong information or you would like to contribute, email me! I'll appreciate it!\n\nMy e-mail: mzavaletavargas@gmail.com\n\nThanks!\n\n[Back to mi website](http://gustavozavaleta.com)\n\n### Content Example\n\n![[dendron://architecture/architecture.microservices]]\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Gustavo's Wiki","description":"Personal knowledge space","duplicateNoteBehavior":{"action":"useVault","payload":["vault","programming","dev-ops","operating-systems","personal-growth","databases","networking","computer-science","books","infrastructure","health","architecture"]},"siteUrl":"https://wiki.gustavozavaleta.com","siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"dev":{"previewV2Enabled":false,"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.72.0","vaults":[{"fsPath":"architecture","name":"architecture"},{"fsPath":"health","name":"health"},{"fsPath":"infrastructure","name":"infrastructure"},{"fsPath":"books","name":"books"},{"fsPath":"computer-science","name":"computer-science"},{"fsPath":"networking","name":"networking"},{"fsPath":"databases","name":"databases"},{"fsPath":"personal-growth","name":"personal-growth"},{"fsPath":"operating-systems","name":"operating-systems"},{"fsPath":"dev-ops","name":"dev-ops"},{"fsPath":"programming","name":"programming"},{"fsPath":"vault","name":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true},"mermaid":true,"useKatex":true}},"__N_SSG":true}